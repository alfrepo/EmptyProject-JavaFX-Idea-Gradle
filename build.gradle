/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'application'
apply plugin: "idea"

targetCompatibility = '1.9'
sourceCompatibility = '1.9'

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

tasks.withType(Jar) {
    destinationDir = file("$rootDir/out/artifacts/$rootProject.name/")
}

mainClassName = "sample.Main"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:20.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'


    // Logging Fascade. From now on - the log interface may be used in code
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    // Logging engine. From now on the logs are really processed
    // and stored in the default location.
    //required for logging LoggingEvents
    compile 'ch.qos.logback:logback-core:1.1.3'

    //required for logging LoggingEvents
    compile 'ch.qos.logback:logback-classic:1.1.3'
}


jar {
    /* Tune the java manifest, to tell about the main class */
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'sample.Main'
        )
    }

    // tells to put all dependend jars to our fat jar
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java", "src/main/resources"]

            /* Required to add fxml and xml to the jar */
            includes = ["**/*.fxml", "**/*.xml"]
        }
    }
}